{"version":3,"file":"static/js/567.d750f824.chunk.js","mappings":"0MAiCA,EA9B8B,WAE5B,OAA4BA,EAAAA,EAAAA,YAAWC,EAAAA,GAA/BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,OACE,iCACE,gBAAKC,UAAU,eAAf,UACE,mBAAOC,QAAQ,mBAAmBD,UAAU,mCAA5C,WACE,iBAAKA,UAAU,WAAf,WACE,kBAAOE,GAAG,mBAAmBC,SAAU,kBAAMJ,EAAS,CAAEK,KAAM,sBAAuBC,QAASP,EAAMQ,SAAUF,KAAK,WAAWJ,UAAU,aACxI,gBAAKA,UAAU,mDACf,gBAAKA,UAAU,oFAEjB,gBAAKA,UAAU,qCAAf,6BAGJ,gBAAKA,UAAU,eAAf,UACE,mBAAOC,QAAQ,gBAAgBD,UAAU,mCAAzC,WACE,iBAAKA,UAAU,WAAf,WACE,kBAAOE,GAAG,gBAAgBC,SAAU,kBAAMJ,EAAS,CAAEK,KAAM,kBAAmBC,QAASP,EAAMS,IAAKH,KAAK,WAAWJ,UAAU,aAC5H,gBAAKA,UAAU,mDACf,gBAAKA,UAAU,oFAEjB,gBAAKA,UAAU,qCAAf,gCCKV,EApByC,SAAC,GAKnC,IAJLQ,EAII,EAJJA,KACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,cACAC,EACI,EADJA,GAGQb,GAAUF,EAAAA,EAAAA,YAAWC,EAAAA,GAArBC,MAER,OACE,gBACEE,UAAU,+BACVY,QAAS,kBAAMF,EAAcF,IAF/B,UAIGC,GAAuB,SAATD,GAAkB,iBAAMR,UAAS,UAAKF,EAAMQ,SAAW,gBAAkB,WAAxC,kCAAuF,KACtIK,EAAGE,kB,mLCyDV,EAtEwC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUJ,EAAyB,EAAzBA,cAAeH,EAAU,EAAVA,IAClE,OACE,iBAAKP,UAAU,8GAAf,WACE,SAAC,EAAD,KACA,eAAIA,UAAU,6BAAd,SACGe,OAAOC,KAAKF,GAAUG,KAAI,SAACC,EAAKC,GAC/B,IAAMC,EAAUF,EAChB,OACE,SAAC,EAAD,CACER,cAAeA,EACfC,GAAIJ,EAAMc,EAAAA,EAAAA,EAAkBF,GAASE,EAAAA,EAAAA,EAAkBF,GAEvDX,KAAMY,EACNX,WAAYK,EAASI,IAFhBA,SAOb,eACElB,UAAU,sEACVsB,KAAMC,6BACNC,OAAO,SACPC,IAAI,aAJN,gBAOE,gBACEC,MAAM,6BACN1B,UAAU,UACV2B,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,YAAa,EANf,UAQE,iBACEC,cAAc,QACdC,eAAe,QACfC,EAAE,6IAIR,eAAIjC,UAAU,gDAAd,SACGO,EAAMc,EAAAA,EAAAA,EAAmBA,EAAAA,EAAAA,KAE5B,gBAAKrB,UAAU,kEAAf,UACE,SAACkC,EAAA,EAAD,CAAM5B,UAAU,OAElB,iBAAKN,UAAU,uDAAf,qBACW,KACT,cACEA,UAAU,YACVwB,OAAO,SACPC,IAAI,aACJH,KAAK,qGAJP,6BAOK,IATP,KAUK,KACH,cACEtB,UAAU,YACVwB,OAAO,SACPC,IAAI,aACJH,KAAK,+HAJP","sources":["components/sidebar/Content/StateSwitch.tsx","components/sidebar/Content/SectionMenuItem.tsx","components/sidebar/Content/SidebarContent.tsx"],"sourcesContent":["import { appContext } from \"../../AppContextProvider\";\nimport React, { useContext } from \"react\";\n\nconst StateSwitch: React.FC = () => {\n\n  const { state, dispatch } = useContext(appContext)\n\n  return (\n    <>\n      <div className=\"w-full px-10\" >\n        <label htmlFor=\"toogler-darkmode\" className=\"flex items-center cursor-pointer\">\n          <div className=\"relative\">\n            <input id=\"toogler-darkmode\" onChange={() => dispatch({ type: \"toggle_dark_mode\" })} checked={state.darkMode} type=\"checkbox\" className=\"sr-only\" />\n            <div className=\"w-8 h-3 bg-gray-400 rounded-full shadow-inner\"></div>\n            <div className=\"dot absolute w-5 h-5 bg-white rounded-full shadow -left-1 -top-1 transition\"></div>\n          </div>\n          <div className=\"ml-3 text-light text-sm font-light\">Dark Mode</div>\n        </label>\n      </div>\n      <div className=\"w-full px-10\" >\n        <label htmlFor=\"toogler-idiom\" className=\"flex items-center cursor-pointer\">\n          <div className=\"relative\">\n            <input id=\"toogler-idiom\" onChange={() => dispatch({ type: \"toggle_idiom\" })} checked={state.eng} type=\"checkbox\" className=\"sr-only\" />\n            <div className=\"w-8 h-3 bg-gray-400 rounded-full shadow-inner\"></div>\n            <div className=\"dot absolute w-5 h-5 bg-white rounded-full shadow -left-1 -top-1 transition\"></div>\n          </div>\n          <div className=\"ml-3 text-light text-sm font-light\">ESP / ENG</div>\n        </label>\n      </div>\n    </>\n  );\n};\n\nexport default StateSwitch;\n","import React, { useContext } from \"react\";\nimport { ContentSections } from \"../../../utils/types\";\nimport { appContext } from \"../../AppContextProvider\"\n\ninterface Props {\n  name: ContentSections;\n  as: string;\n  isSelected: boolean;\n  updateSection: (target: ContentSections) => void;\n}\n\nconst SectionMenuItem: React.FC<Props> = ({\n  name,\n  isSelected,\n  updateSection,\n  as\n}) => {\n\n  const { state } = useContext(appContext)\n\n  return (\n    <li\n      className=\"text-light relative pl-[20%]\"\n      onClick={() => updateSection(name)}\n    >\n      {isSelected && name !== \"home\" ? <span className={`${state.darkMode ? \"triangle_dark\" : \"triangle\"} intro absolute top-1 left-0`} /> : null}\n      {as.toUpperCase()}\n    </li>\n  );\n};\n\nexport default SectionMenuItem;\n","import React from \"react\";\nimport { Sections, ContentSections } from \"../../../utils/types\";\nimport StateSwitch from \"./StateSwitch\";\nimport SectionMenuItem from \"./SectionMenuItem\";\nimport RRSS from \"../../rrss/RRSS\";\nimport Data from \"./sections.json\"\n\ninterface Props {\n  sections: Sections;\n  updateSection: (target: ContentSections) => void;\n  eng: boolean;\n}\n\nconst SidebarContent: React.FC<Props> = ({ sections, updateSection, eng }) => {\n  return (\n    <div className=\"row-span-5 pt-8 relative flex flex-col gap-4 xl:gap-6 2xl:justify-around 2xl:pb-10 2xl:w-[80%] items-center\">\n      <StateSwitch />\n      <ul className=\"list-none space-y-3 w-full\">\n        {Object.keys(sections).map((key, index) => {\n          const section = key as ContentSections;\n          return (\n            <SectionMenuItem\n              updateSection={updateSection}\n              as={eng ? Data.eng.sections[index] : Data.esp.sections[index]}\n              key={key}\n              name={section}\n              isSelected={sections[key]}\n            />\n          );\n        })}\n      </ul>\n      <a\n        className=\"text-light text-xl w-full pl-[20%] flex flex-row items-center gap-4\"\n        href={process.env.PUBLIC_URL + \"/cv/ruben_cv.pdf\"}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        CV\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-4 w-4\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth={2}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\"\n          />\n        </svg>\n      </a>\n      <h3 className=\"text-lg pl-[20%] w-full text-light font-light\">\n        {eng ? Data.eng.message : Data.esp.message}\n      </h3>\n      <div className=\"flex flex-row px-[20%] w-full items-center justify-start gap-16\">\n        <RRSS darkMode={true} />\n      </div>\n      <div className=\"text-xs w-full absolute bottom-8 pl-[20%] text-light\">\n        Photo by{\" \"}\n        <a\n          className=\"underline\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://unsplash.com/@masamasa3?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\n        >\n          masahiro miyagi\n        </a>{\" \"}\n        on{\" \"}\n        <a\n          className=\"underline\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://unsplash.com/collections/1499877/landscape-nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\n        >\n          Unsplash\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarContent;\n"],"names":["useContext","appContext","state","dispatch","className","htmlFor","id","onChange","type","checked","darkMode","eng","name","isSelected","updateSection","as","onClick","toUpperCase","sections","Object","keys","map","key","index","section","Data","href","process","target","rel","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","RRSS"],"sourceRoot":""}